name: Java CI with Maven on Linux

on:
  push:
  pull_request:
  
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      workdir: library
    strategy:
      matrix:
        # test against several Java versions:
        include:
          - java: 8
          - java: 11  
            additional-maven-args: >
              -Pcoveralls,pit, sonar:sonar
              -Dsonar.organization=mihailteodor-github
              -Dsonar.host.url=https://sonarcloud.io
              -Dsonar.projectKey=MihailTeodor_attsw-final-project
              -DrepoToken=$COVERALLS_REPO_TOKEN 
              -DpullRequest=${{ github.event.pull_request.number }}
        
    name: Build with Java ${{ matrix.java }}
    steps:
    - uses: actions/checkout@v2
      with:
        # shallow clones should be disabled for a better relevancy of SonarQube analysis
        fetch-depth: 0
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: |
          ~/m2
          ~/.sonar/cache
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml', '**/*.yml') }}
        restore-keys: ${{ runner.os }}-m2-    
    - name: Build with Maven
      run: > 
        xvfb-run mvn verify ${{ matrix.additional-maven-args }}
      working-directory: ${{ env.workdir }}
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }} 
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
    - name: Generate JUnit Report
      run: >
        mvn surefire-report:report-only surefire-report:failsafe-report-only site:site -DgenerateReports=false
      working-directory: ${{ env.workdir }}  
      if: ${{ always() }}  
    - name: Archive Reports
      uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: reports-jdk-${{ matrix.java }}
        path: |
          **/target/site
          **/target/pit-reports
            